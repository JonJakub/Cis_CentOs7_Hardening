- name: " 6.1.2 || Ensure permissions on /etc/passwd are configured"
  file:
      dest: /etc/passwd
      owner: root
      group: root
      mode: 0644
  when:
      - rhel7cis_rule_6_1_2|bool
  tags:
      - level1
      
      - patch
      - rule_6.1.2

- name: " 6.1.3 || Ensure permissions on /etc/shadow are configured"
  file:
      dest: /etc/shadow
      owner: root
      group: root
      mode: 0000
  when:
      - rhel7cis_rule_6_1_3|bool
  tags:
      - level1
      
      - patch
      - rule_6.1.3

- name: " 6.1.4 || Ensure permissions on /etc/group are configured"
  file:
      dest: /etc/group
      owner: root
      group: root
      mode: 0644
  when:
      - rhel7cis_rule_6_1_4|bool
  tags:
      - level1
      
      - patch
      - rule_6.1.4

- name: " 6.1.5 || Ensure permissions on /etc/gshadow are configured"
  file:
      dest: /etc/gshadow
      owner: root
      group: root
      mode: 0000
  when:
      - rhel7cis_rule_6_1_5|bool
  tags:
      - level1
      
      - patch
      - rule_6.1.5

- name: " 6.1.6 || Ensure permissions on /etc/passwd- are configured"
  file:
      dest: /etc/passwd-
      owner: root
      group: root
      mode: 0600
  when:
      - rhel7cis_rule_6_1_6|bool
  tags:
      - level1
      
      - patch
      - rule_6.1.6

- name: " 6.1.7 || Ensure permissions on /etc/shadow- are configured"
  file:
      dest: /etc/shadow-
      owner: root
      group: root
      mode: 0000
  when:
      - rhel7cis_rule_6_1_7|bool
  tags:
      - level1
      
      - patch
      - rule_6.1.7

- name: " 6.1.8 || Ensure permissions on /etc/group- are configured"
  file:
      dest: /etc/group-
      owner: root
      group: root
      mode: 0600
  when:
      - rhel7cis_rule_6_1_8|bool
  tags:
      - level1
      
      - patch
      - rule_6.1.8

- name: " 6.1.9 || Ensure permissions on /etc/gshadow- are configured"
  file:
      dest: /etc/gshadow-
      owner: root
      group: root
      mode: 0600
  when:
      - rhel7cis_rule_6_1_9|bool
  tags:
      - level1
      
      - patch
      - rule_6.1.9

- name: " 6.1.10 || Ensure no world writable files exist"
  block:
    - name: 6.1.10 Ensure no world writable files exist | find files
      shell: |
        df --local -P | awk '{if (NR!=1) print $6}' | xargs -I '{}' find '{}' -xdev -type f -perm -0002;
      register: output_6_1_10
    - name: 6.1.10 Ensure no world writable files exist | save output
      copy:
        dest: "{{ outputfiles }}/6.1.10"
        content: "{{ output_6_1_10.stdout }}"
    - name: 6.1.10 Ensure no world writable files exist | fix permission
      file:
        path: "{{ item }}"
        mode: "o-w"
      with_items: "{{ output_6_1_10.stdout }}"
      ignore_errors: yes
  when:
      - rhel7cis_rule_6_1_10|bool
  tags:
      - level1    
      - patch
      - rule_6.1.10

- name: " 6.1.11 || Ensure no unowned files or directories exist"
  block:
    - name: 6.1.11 Ensure no unowned files or directories exist | Find
      shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -nouser 2> /dev/null && true || true
      register: output_6_1_11
    - name: 6.1.11 Ensure no unowned files or directories exist | Save output
      copy:
        dest: "{{ outputfiles }}/6.1.11"
        content: "{{ output_6_1_11.stdout }}"
    - name: 6.1.11 Ensure no unowned files or directories exist | Fix
      file:
        path: "{{ item }}"
        owner: "{{ withoutOwnerFileDirOwner }}"
        group: "{{ withoutGroupFilesDirGroup }}"
      with_items: "{{ output_6_1_11.stdout }}"
  when:
      - rhel7cis_rule_6_1_11|bool
  tags:
      - level1
      
      - patch
      - rule_6.1.11

- name: " 6.1.12 || Ensure no ungrouped files or directories exist"
  block:
    - name: 6.1.12 Ensure no ungrouped files or directories exist | Find
      shell: df --local -P | awk '{if (NR!=1) print $6}' | xargs -I '{}' find '{}' -xdev -nogroup 2> /dev/null && true || true
      register: output_6_1_12
    - name: 6.1.12 Ensure no ungrouped files or directories exist | Save output
      copy:
        dest: "{{ outputfiles }}/6.1.11"
        content: "{{ output_6_1_11.stdout }}"
    - name: 6.1.12 Ensure no ungrouped files or directories exist | Fix
      file:
        path: "{{ item }}"
        owner: "{{ withoutOwnerFileDirOwner }}"
        group: "{{ withoutGroupFilesDirGroup }}"
      with_items: "{{ output_6_1_12.stdout }}"
  when:
      - rhel7cis_rule_6_1_12|bool
  tags:
      - level1
      
      - patch
      - rule_6.1.12

- name: "NOT 6.1.13 || Audit SUID executables"
  block:
    - name: 6.1.13 Audit SUID executables | find
      shell: df --local -P | awk '{if (NR!=1) print $6}' | xargs -I '{}' find '{}' -xdev -type f -perm -4000 2> /dev/null && true || true
      register: output_6_1_13
    - name: 6.1.13 Audit SUID executables | save output
      copy:
        dest: "{{ outputfiles }}/6.1.13"
        content: "{{ output_6_1_13 }}"
  when:
      - rhel7cis_rule_6_1_13|bool
  tags:
      - level1    
      - patch
      - rule_6.1.13

- name: "6.1.14 || Audit SGID executables"
  block:
    - name: 6.1.14 Audit SGID executables | find
      shell: df --local -P | awk '{if (NR!=1) print $6}' | xargs -I '{}' find '{}' -xdev -type f -perm -2000 2> /dev/null && true || true
      register: output_6_1_14
    - name: 6.1.14 Audit SGID executables | save output
      copy:
        dest: "{{ outputfiles }}/6.1.14"
        content: "{{ output_6_1_14 }}"
  when:
      - rhel7cis_rule_6_1_14|bool
  tags:
      - level1     
      - patch
      - rule_6.1.14

- name: "6.2.0 | Ensure accounts in /etc/passwd use shadowed passwords"
  shell: |
    sed -e 's/^\([a-zA-Z0-9_]*\):[^:]*:/\1:x:/' -i /etc/passwd
  register: output_6_2_0
  when:
      - rhel7cis_rule_6_2_0|bool
  tags:
      - level1
      - rule_6.2.0

- name: " 6.2.0 | Ensure accounts in /etc/passwd use shadowed passwords"
  copy:
        dest: "{{ outputfiles }}/6.2.0"
        content: "{{ output_6_2_0}}"
  when:
      - rhel7cis_rule_6_2_0|bool
  tags:
      - level1
      - rule_6.2.0



- name: " 6.2.1 || Ensure /etc/shadow password fields are not empty"
  command: passwd -l {{ item }}
  changed_when: no
  failed_when: no
  with_items: "{{ empty_password_accounts }}"
  when:
      - empty_password_accounts.rc
      - rhel7cis_rule_6_2_1|bool
  tags:
      - level1
      
      - patch
      - rule_6.2.1

- name: " 6.2.5 || Ensure root is the only UID 0 account"
  command: passwd -l {{ item }}
  changed_when: no
  failed_when: no
  with_items: "{{ uid_zero_accounts_except_root }}"
  when:
      - uid_zero_accounts_except_root.rc
      - rhel7cis_rule_6_2_5|bool
  tags:
      - level1
      
      - patch
      - rule_6.2.5

- name: " 6.2.6 || Ensure root PATH Integrity"
  block:
    - name: 6.2.3 Ensure root PATH Integrity | run
      script: 6.2.3.sh
      register: output_6_2_3
    - name: 6.2.3 Ensure root PATH Integrity | save output
      copy:
        dest: "{{ outputfiles }}/6.2.3"
        content: "{{ output_6_2_3 }}"
  when:
      - rhel7cis_rule_6_2_6|bool
  tags:
      - level1     
      - patch
      - rule_6.2.6

- name: " 6.2.7 || Ensure all users' home directories exist"
  block:
    - name: 6.2.4 Ensure all users' home directories exist | list
      shell: |
        grep -E -v '^(halt|sync|shutdown)' /etc/passwd | awk -F: '($7 != "'"$(which nologin)"'" && $7 != "/bin/false") { print $1 " " $6 }' | while
        read -r user dir
        do
            if [ ! -d "$dir" ]; then
                echo "${user}"
            fi
        done
      register: output_6_2_4
    - name: 6.2.4 Ensure all users' home directories exist | save
      copy:
        dest: "{{ outputfiles }}/6.2.4"
        content: "{{ output_6_2_4 }}"
    - name: 6.2.4 Ensure all users' home directories exist | fix
      user:
        name: "{{ item }}"
        create_home: yes
      with_items: "{{ output_6_2_4 }}"
      when: "{{ output_6_2_4|length > 0 }}"
  when:
      - rhel7cis_rule_6_2_7|bool
  tags:
      - level1     
      - patch
      - rule_6.2.7

- name: " 6.2.8 || Ensure users' home directories permissions are 750 or more restrictive"
  block:
    - name: 6.2.5 Ensure users home directories permissions are 750 or more restrictive - list
      script: 6_2_5.sh
      register: output_6_2_5
    - name: 6.2.5 Ensure users home directories permissions are 750 or more restrictive - fix
      file:
        name: "{{ item }}"
        mode: "g-w,o-rwx"
      with_items: "{{ output_6_2_5 }}"
      when: "{{ output_6_2_5|length > 0 }}"
  when:
      - rhel7cis_rule_6_2_8|bool
  tags:
      - level1      
      - patch
      - rule_6.2.8

- name: " 6.2.9 || Ensure users own their home directories"
  block:
    - name: 6.2.9 Ensure users own their home directories | list
      script: 6_2_9.sh
      register: output_6_2_9
    - name: 6.2.9 Ensure users own their home directories | Var
      set_fact:
        output_6_2_6_list: "{{ output_6_2_9 | list }}"
    - name: 6.2.9 Ensure users own their home directories | save output
      copy:
        dest: "{{ outputfiles }}/6.2.9"
        content: "{{ output_6_2_9_list }}"
    - name: 6.2.9 Ensure users own their home directories | fix
      file:
        path: "{{ item.split(',')[0] }}"
        group: "{{ item.split(',')[1] }}"
        owner: "{{ item.split(',')[1] }}"
        recurse: yes
      with_items: "{{ output_6_2_9_list }}"
  when:
      - rhel7cis_rule_6_2_9|bool
  tags:
      - level1   
      - patch
      - rule_6.2.9

- name: " 6.2.10 || Ensure users' dot files are not group or world writable"
  block:
    - name: 6.2.10 Ensure users dot files are not group or world writable | list
      script: 6_2_10.sh
      register: output_6_2_10
    - name: 6.2.10 Ensure users' dot files are not group or world writable | save output
      copy:
        dest: "{{ outputfiles }}/6.2.10"
        content: "{{ output_6_2_10.stdout }}"
    - name: 6.2.10 Ensure users' dot files are not group or world writable | correct file permissions
      # files with go+w will be touched twice, as they figure twice in the filter result
      file:
        path: "{{ item.split()[-1] }}"
        mode: g-w,o-w
      with_items: "{{ output_6_2_10 }}"
  when:
      - rhel7cis_rule_6_2_10|bool
  tags:
      - level1     
      - patch
      - rule_6.2.10

- name: " 6.2.11 || Ensure no users have .forward files"
  file:
      state: absent
      dest: "~{{ item }}/.forward"
  with_items: "{{ users }}"
  when:
      - rhel7cis_rule_6_2_11|bool
  tags:
      - level1
      
      - patch
      - rule_6.2.11

- name: " 6.2.12 || Ensure no users have .netrc files"
  file:
      state: absent
      dest: "~{{ item }}/.netrc"
  with_items: "{{ users }}"
  when:
      - rhel7cis_rule_6_2_12|bool
  tags:
      - level1
      
      - patch
      - rule_6.2.12

# - name: " 6.2.13 || Ensure users' .netrc Files are not group or world accessible"
#   file:
#       mode: 0600
#       dest: "~{{ item }}/.netrc"
#   with_items: "{{ users.stdout_lines }}"
#   tags:
#       - level1
#       
#       - patch
#       - rule_6.2.13

- name: " 6.2.14 || Ensure no users have .rhosts files"
  file:
      state: absent
      dest: "~{{ item }}/.rhosts"
  with_items: "{{ users }}"
  when:
      - rhel7cis_rule_6_2_14|bool
  tags:
      - level1
      
      - patch
      - rule_6.2.14

- name: " 6.2.15 || Ensure all groups in /etc/passwd exist in /etc/group"
  block:
    - name: 6.2.15 Ensure all groups in /etc/passwd exist in /etc/group | list
      shell: |
        for i in $(cut -s -d: -f4 /etc/passwd | sort -u); do
            grep -q -P "^.*?:[^:]*:$i:" /etc/group
            if [ $? -ne 0 ]; then
                echo "Group $i is referenced by /etc/passwd but does not exist in /etc/group"
            fi
        done
      register: output_6_2_15
    - name: 6.2.15 Ensure all groups in /etc/passwd exist in /etc/group | save output
      copy:
        dest: "{{ outputfiles }}/6.2.15"
        content: "{{ output_6_2_15 }}"
  when:
      - rhel7cis_rule_6_2_15|bool
  tags:
      - level1
      - patch
      - rule_6.2.15

- name: " 6.2.16 || Ensure no duplicate UIDs exist"
  block:
    - name: 6.2.16 Ensure no duplicate UIDs exist | list
      shell: |
        cut -f3 -d":" /etc/passwd | sort -n | uniq -c | while read x; do
            [ -z "$x" ] && break
            set - $x
            if [ $1 -gt 1 ]; then
                users=$(awk -F: '($3 == n) { print $1 }' n=$2 /etc/passwd | xargs)
                echo "Duplicate UID ($2): $users"
            fi
        done
      register: output_6_2_16
    - name: 6.2.13 Ensure no duplicate UIDs exist | save output
      copy:
        dest: "{{ outputfiles }}/6.2.16"
        content: "{{ output_6_2_16 }}"
  when:
      - rhel7cis_rule_6_2_16|bool
  tags:
      - level1     
      - patch
      - rule_6.2.16

- name: " 6.2.17 || Ensure no duplicate GIDs exist"
  block:
    - name: 6.2.17 Ensure no duplicate GIDs exist | list
      shell: |
        cut -d: -f3 /etc/group | sort | uniq -d | while read x; do
            echo "Duplicate GID ($x) in /etc/group"
        done
      register: output_6_2_17
    - name: 6.2.17 Ensure no duplicate GIDs exist | save output
      copy:
        dest: "{{ outputfiles }}/6.2.17"
        content: "{{ output_6_2_17 }}"
  when:
      - rhel7cis_rule_6_2_17|bool
  tags:
      - level1
      - patch
      - rule_6.2.17

- name: " 6.2.18 || Ensure no duplicate user names exist"
  block:
    - name: 6.2.18 Ensure no duplicate user names exist | list
      shell: |
        cut -d: -f1 /etc/passwd | sort | uniq -d | while read x; do
            echo "Duplicate login name ${x} in /etc/passwd"
        done
      register: output_6_2_18
    - name: 6.2.18 Ensure no duplicate user names exist | save output
      copy:
        dest: "{{ outputfiles }}/6.2.18"
        content: "{{ output_6_2_18 }}"
  when:
      - rhel7cis_rule_6_2_18|bool
  tags:
      - level1
      - patch
      - rule_6.2.18

- name: " 6.2.19 || Ensure no duplicate group names exist"
  command: /bin/true
  changed_when: no
  when:
      - rhel7cis_rule_6_2_19|bool
  tags:
      - level1
      
      - patch
      - rule_6.2.19

- name: "6.2.20 | Ensure shadow group is empty"
  shell: |
    grep ^shadow:[^:]*:[^:]*:[^:]+ /etc/group
    awk -F: '($4 == "<shadow-gid>") { print }' /etc/passwd
  register: output_6_2_20
  when:
      - rhel7cis_rule_6_2_20|bool
  tags:
      - level1
      - rule_6.2.20

- name: "6.2.20 | Ensure shadow group is empty"
  copy:
        dest: "{{ outputfiles }}/6.2.20"
        content: "{{ output_6_2_20 }}"
  when:
      - rhel7cis_rule_6_2_20|bool
  tags:
      - level1
      - rule_6.2.20


